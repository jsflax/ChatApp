{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jasonflax/Development/ChatApp/src/components/ChatBar.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n          padding: 2px 8px;\\n        \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n        height: 100%;\\n        border-radius: 4px;\\n        line-height: 16px;\\n        font-size: 16px;\\n        text-align: center;\\n        border: none;\\n        margin-left: 12px;\\n        background-color: transparent;\\n        background-color: rgba(0, 123, 255, 0.25);\\n        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15);\\n        &:focus,\\n        :hover {\\n          // background-color: darkblue;\\n          // color: white;\\n          outline: 0;\\n          box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);\\n        }\\n      \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-left: 8px;\\n  padding-right: 8px;\\n  border: none;\\n  border-radius: 4px;\\n  flex-grow: 1;\\n  line-height: 24px;\\n  font-size: 16px;\\n  // overflow-x: scroll;\\n  max-height: 100%;\\n  // min-height: 100%;\\n  &:focus {\\n    outline: 0;\\n    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  min-height: 52px;\\n  background-color: lightgray;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 12px 12px;\\n  box-sizing: border-box;\\n  flex-grow: 0;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n          cursor: pointer;\\n          padding-right: 8px;\\n          padding-top: 6px;\\n        \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { usersCollection, client } from \"..\";\nimport { Binary } from \"bson\";\nexport default function ChatBar(props) {\n  var sendMessage = props.sendMessage,\n      setMessageText = props.setMessageText,\n      messageText = props.messageText;\n\n  var handleMessageSend = function handleMessageSend() {\n    sendMessage(messageText);\n    setMessageText(\"\");\n  };\n\n  var handleInput = function handleInput(e) {\n    return setMessageText(e.target.value);\n  };\n\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === \"Enter\") {\n      handleMessageSend();\n    }\n  };\n\n  return jsx(ChatBarLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, jsx(\"div\", {\n    className: \"dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, jsx(FontAwesomeIcon, {\n    icon: \"ellipsis-v\" // class=\"dropbtn\"\n    ,\n    css: css(_templateObject()),\n    onClick: function onClick() {\n      document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), jsx(\"div\", {\n    id: \"myDropdown\",\n    className: \"dropdown-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, jsx(\"label\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"set avatar\", jsx(\"input\", {\n    type: \"file\",\n    id: \"file-upload\",\n    onChange: function onChange() {\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        var theBytes = e.target.result;\n        var fileByteArray = [];\n        fileByteArray.push(theBytes);\n        console.log(fileByteArray);\n        var binary = new Binary(fileByteArray);\n        console.log(binary);\n        usersCollection.updateOne({\n          _id: client.auth.user.id\n        }, {\n          $set: {\n            avatar: binary\n          }\n        }).then(function (it) {\n          return console.log(it);\n        });\n      };\n\n      reader.readAsArrayBuffer(document.querySelector('input').files[0]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })))), jsx(ChatBarInput, {\n    type: \"text\",\n    value: messageText,\n    onChange: handleInput,\n    onKeyDown: handleKeyPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), jsx(ChatBarButton, {\n    onClick: handleMessageSend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n} // const ChatBarButton = props => {\n//   return (\n//     <button\n//       css={css`\n//         height: 100%;\n//         border-radius: 4px;\n//         line-height: 16px;\n//         font-size: 16px;\n//         text-align: center;\n//         border: none;\n//         margin-left: 12px;\n//         background-color: transparent;\n//         background-color: rgba(0, 123, 255, 0.25);\n//         box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15);\n//         &:focus,\n//         :hover {\n//           // background-color: darkblue;\n//           // color: white;\n//           outline: 0;\n//           box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);\n//         }\n//       `}\n//       onClick={props.onClick}\n//     >\n//       <FontAwesomeIcon\n//         icon=\"paper-plane\"\n//         css={css`\n//           padding: 2px 8px;\n//         `}\n//       />\n//     </button>\n//   );\n// };\n\nvar ChatBarLayout = styled.div(_templateObject2());\nvar ChatBarInput = styled(\"input\")(_templateObject3());\n\nvar ChatBarButton = function ChatBarButton(props) {\n  return jsx(\"button\", {\n    css: css(_templateObject4()),\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, jsx(FontAwesomeIcon, {\n    icon: \"paper-plane\",\n    css: css(_templateObject5()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/jasonflax/Development/ChatApp/src/components/ChatBar.js"],"names":["css","jsx","styled","FontAwesomeIcon","usersCollection","client","Binary","ChatBar","props","sendMessage","setMessageText","messageText","handleMessageSend","handleInput","e","target","value","handleKeyPress","key","document","getElementById","classList","toggle","reader","FileReader","onload","theBytes","result","fileByteArray","push","console","log","binary","updateOne","_id","auth","user","id","$set","avatar","then","it","readAsArrayBuffer","querySelector","files","ChatBarLayout","div","ChatBarInput","ChatBarButton","onClick"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { usersCollection, client } from \"..\";\nimport { Binary } from \"bson\";\nexport default function ChatBar(props) {\n  const { sendMessage, setMessageText, messageText } = props;\n  const handleMessageSend = () => {\n    sendMessage(messageText);\n    setMessageText(\"\");\n  };\n  const handleInput = e => setMessageText(e.target.value);\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleMessageSend();\n    }\n  };\n  return (\n    <ChatBarLayout>\n      <div className=\"dropdown\">\n      <FontAwesomeIcon\n        icon=\"ellipsis-v\"\n        // class=\"dropbtn\"\n        css={css`\n          cursor: pointer;\n          padding-right: 8px;\n          padding-top: 6px;\n        `}\n        onClick={() => {\n          document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n        }}\n      />\n      <div id=\"myDropdown\" className=\"dropdown-content\">\n        <label href=\"#\">set avatar\n        <input type=\"file\" id=\"file-upload\" onChange={() => {\n          var reader = new FileReader();\n          reader.onload = function(e) { \n              var theBytes = e.target.result;\n              var fileByteArray = [];\n              fileByteArray.push(theBytes);\n              console.log(fileByteArray);\n              const binary = new Binary(fileByteArray);\n              console.log(binary)\n              usersCollection.updateOne(\n                { _id: client.auth.user.id },\n                { $set: { avatar: binary }}\n              ).then((it) => console.log(it));\n          }\n          reader.readAsArrayBuffer(document.querySelector('input').files[0]);\n        }}/>\n        </label>\n      </div>\n      </div>\n      <ChatBarInput\n        type=\"text\"\n        value={messageText}\n        onChange={handleInput}\n        onKeyDown={handleKeyPress}\n      />\n      <ChatBarButton onClick={handleMessageSend} />\n    </ChatBarLayout>\n  );\n}\n// const ChatBarButton = props => {\n//   return (\n//     <button\n//       css={css`\n//         height: 100%;\n//         border-radius: 4px;\n//         line-height: 16px;\n//         font-size: 16px;\n//         text-align: center;\n//         border: none;\n//         margin-left: 12px;\n//         background-color: transparent;\n//         background-color: rgba(0, 123, 255, 0.25);\n//         box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15);\n//         &:focus,\n//         :hover {\n//           // background-color: darkblue;\n//           // color: white;\n//           outline: 0;\n//           box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);\n//         }\n//       `}\n//       onClick={props.onClick}\n//     >\n//       <FontAwesomeIcon\n//         icon=\"paper-plane\"\n//         css={css`\n//           padding: 2px 8px;\n//         `}\n//       />\n//     </button>\n//   );\n// };\n\nconst ChatBarLayout = styled.div`\n  width: 100%;\n  min-height: 52px;\n  background-color: lightgray;\n  display: flex;\n  flex-direction: row;\n  padding: 12px 12px;\n  box-sizing: border-box;\n  flex-grow: 0;\n`;\n\nconst ChatBarInput = styled(\"input\")`\n  padding-left: 8px;\n  padding-right: 8px;\n  border: none;\n  border-radius: 4px;\n  flex-grow: 1;\n  line-height: 24px;\n  font-size: 16px;\n  // overflow-x: scroll;\n  max-height: 100%;\n  // min-height: 100%;\n  &:focus {\n    outline: 0;\n    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);\n  }\n`;\nconst ChatBarButton = props => {\n  return (\n    <button\n      css={css`\n        height: 100%;\n        border-radius: 4px;\n        line-height: 16px;\n        font-size: 16px;\n        text-align: center;\n        border: none;\n        margin-left: 12px;\n        background-color: transparent;\n        background-color: rgba(0, 123, 255, 0.25);\n        box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.15);\n        &:focus,\n        :hover {\n          // background-color: darkblue;\n          // color: white;\n          outline: 0;\n          box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);\n        }\n      `}\n      onClick={props.onClick}\n    >\n      <FontAwesomeIcon\n        icon=\"paper-plane\"\n        css={css`\n          padding: 2px 8px;\n        `}\n      />\n    </button>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}