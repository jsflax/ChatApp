{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jasonflax/Development/ChatApp/src/components/ChatRoom.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  height: 100vh;\\n  max-height: 100vh;\\n  background-color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport ChatFeed from \"./ChatFeed\";\nimport ChatBar from \"./ChatBar\";\nvar USER = {\n  id: \"20391029481029849124\",\n  profile: {\n    firstName: \"Jessica\",\n    lastName: \"Real\"\n  }\n};\nvar MESSAGES = [{\n  ts: 1557355231922,\n  from: {\n    id: \"40391024481629829197\",\n    name: \"Jack Example\"\n  },\n  text: \"Wanna meet up with Tim at 8 for dinner?\"\n}, {\n  ts: 1557355239361,\n  from: {\n    id: \"20391029481029849124\",\n    name: \"Jessica Real\"\n  },\n  text: \"Yeah that works for me!\"\n}, {\n  ts: 1557355245967,\n  from: {\n    id: \"20391029481029849124\",\n    name: \"Jessica Real\"\n  },\n  text: \"What restaurant should we go to? There's a place in the LES that I've wanted to try for a while.\"\n}, {\n  ts: 1557355249520,\n  from: {\n    id: \"40391024481629829197\",\n    name: \"Jack Example\"\n  },\n  text: \"What kind of food?\"\n}, {\n  ts: 1557355255359,\n  from: {\n    id: \"20391029481029849124\",\n    name: \"Jessica Real\"\n  },\n  text: \"Mediterranean! Merguez 😍😍😍\"\n}, {\n  ts: 1557355259651,\n  from: {\n    id: \"40391024481629829197\",\n    name: \"Jack Example\"\n  },\n  text: \"Sounds great lets do it!\"\n}];\n/* This component manages the state of the entire chat room.\n * NOTE: Requires a logged in Stitch user\n */\n\nexport default function ChatRoom(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageText = _useState6[0],\n      setMessageText = _useState6[1];\n\n  useEffect(function () {\n    // Set up the collection watch stream\n    // TODO: Need to know the document structure\n    setMessages(MESSAGES);\n    setIsLoading(false);\n  }, []);\n\n  var sendMessage = function sendMessage(text) {\n    var ts = Date.now();\n    var from = {\n      id: USER.id,\n      name: \"\".concat(USER.profile.firstName, \" \").concat(USER.profile.lastName)\n    };\n    setMessages([].concat(_toConsumableArray(messages), [{\n      ts: ts,\n      from: from,\n      text: text\n    }]));\n  };\n\n  return jsx(ChatLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, jsx(ChatFeed, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), jsx(ChatBar, {\n    sendMessage: sendMessage,\n    setMessageText: setMessageText,\n    messageText: messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }));\n}\nvar ChatLayout = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/jasonflax/Development/ChatApp/src/components/ChatRoom.js"],"names":["React","useRef","useState","useEffect","css","jsx","styled","ChatFeed","ChatBar","USER","id","profile","firstName","lastName","MESSAGES","ts","from","name","text","ChatRoom","props","isLoading","setIsLoading","messages","setMessages","messageText","setMessageText","sendMessage","Date","now","ChatLayout","div"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\n\nimport ChatFeed from \"./ChatFeed\";\nimport ChatBar from \"./ChatBar\";\n\nconst USER = {\n  id: \"20391029481029849124\",\n  profile: {\n    firstName: \"Jessica\",\n    lastName: \"Real\",\n  },\n};\n\nconst MESSAGES = [\n  {\n    ts: 1557355231922,\n    from: { id: \"40391024481629829197\", name: \"Jack Example\" },\n    text: \"Wanna meet up with Tim at 8 for dinner?\",\n  },\n  {\n    ts: 1557355239361,\n    from: { id: \"20391029481029849124\", name: \"Jessica Real\" },\n    text: \"Yeah that works for me!\",\n  },\n  {\n    ts: 1557355245967,\n    from: { id: \"20391029481029849124\", name: \"Jessica Real\" },\n    text:\n      \"What restaurant should we go to? There's a place in the LES that I've wanted to try for a while.\",\n  },\n  {\n    ts: 1557355249520,\n    from: { id: \"40391024481629829197\", name: \"Jack Example\" },\n    text: \"What kind of food?\",\n  },\n  {\n    ts: 1557355255359,\n    from: { id: \"20391029481029849124\", name: \"Jessica Real\" },\n    text: \"Mediterranean! Merguez 😍😍😍\",\n  },\n  {\n    ts: 1557355259651,\n    from: { id: \"40391024481629829197\", name: \"Jack Example\" },\n    text: \"Sounds great lets do it!\",\n  },\n];\n\n/* This component manages the state of the entire chat room.\n * NOTE: Requires a logged in Stitch user\n */\nexport default function ChatRoom(props) {\n  const [isLoading, setIsLoading] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState(\"\");\n  useEffect(() => {\n    // Set up the collection watch stream\n    // TODO: Need to know the document structure\n    setMessages(MESSAGES);\n    setIsLoading(false);\n  }, []);\n  const sendMessage = text => {\n    const ts = Date.now();\n    const from = {\n      id: USER.id,\n      name: `${USER.profile.firstName} ${USER.profile.lastName}`,\n    };\n    setMessages([...messages, { ts, from, text }]);\n  };\n\n  return (\n    <ChatLayout>\n      <ChatFeed messages={messages} />\n      <ChatBar\n        sendMessage={sendMessage}\n        setMessageText={setMessageText}\n        messageText={messageText}\n      />\n    </ChatLayout>\n  );\n}\n\nconst ChatLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  max-height: 100vh;\n  background-color: white;\n`;\n"]},"metadata":{},"sourceType":"module"}