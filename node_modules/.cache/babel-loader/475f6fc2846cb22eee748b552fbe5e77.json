{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _toConsumableArray from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jasonflax/Development/ChatApp/src/components/ChatRoom.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  height: 100vh;\\n  max-height: 100vh;\\n  background-color: white;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport ChatFeed from \"./ChatFeed\";\nimport ChatBar from \"./ChatBar\";\nimport { usersObserver, channelSubscriptionObserver, channelMessageObserver } from \"../models\";\nimport { channelSubscriptionsCollection, client } from \"..\";\nimport { ObjectId } from \"bson\";\nvar USER = {\n  id: \"20391029481029849124\",\n  profile: {\n    firstName: \"Jessica\",\n    lastName: \"Real\"\n  }\n};\nvar MESSAGES = [{\n  ts: 1557355231922,\n  from: {\n    id: \"40391024481629829197\",\n    name: \"Jack Example\"\n  },\n  text: \"Wanna meet up with Tim at 8 for dinner?\"\n}, {\n  ts: 1557355239361,\n  from: {\n    id: \"20391029481029849124\",\n    name: \"Jessica Real\"\n  },\n  text: \"Yeah that works for me!\"\n}, {\n  ts: 1557355245967,\n  from: {\n    id: \"20391029481029849124\",\n    name: \"Jessica Real\"\n  },\n  text: \"What restaurant should we go to? There's a place in the LES that I've wanted to try for a while.\"\n}, {\n  ts: 1557355249520,\n  from: {\n    id: \"40391024481629829197\",\n    name: \"Jack Example\"\n  },\n  text: \"What kind of food?\"\n}, {\n  ts: 1557355255359,\n  from: {\n    id: \"20391029481029849124\",\n    name: \"Jessica Real\"\n  },\n  text: \"Mediterranean! Merguez 😍😍😍\"\n}, {\n  ts: 1557355259651,\n  from: {\n    id: \"40391024481629829197\",\n    name: \"Jack Example\"\n  },\n  text: \"Sounds great lets do it!\"\n}];\n/* This component manages the state of the entire chat room.\n * NOTE: Requires a logged in Stitch user\n */\n\nvar ChatRoom =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ChatRoom, _React$Component);\n\n  _createClass(ChatRoom, [{\n    key: \"configureCollections\",\n    value: function () {\n      var _configureCollections = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var subscriptionId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                channelMessageObserver.subscribe(function (event) {\n                  console.log(event);\n\n                  _this2.state.messages.push(event.fullDocument);\n\n                  _this2.setState(_this2.state);\n                });\n                _context.next = 3;\n                return client.callFunction(\"subscribeToChannel\", [client.auth.user.id, new ObjectId().toHexString, \"default\"]);\n\n              case 3:\n                subscriptionId = _context.sent;\n                console.log(\"Sub id: \" + subscriptionId);\n                channelSubscriptionObserver.sync(subscriptionId);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function configureCollections() {\n        return _configureCollections.apply(this, arguments);\n      }\n\n      return configureCollections;\n    }()\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(text) {\n      var ts = Date.now();\n      var from = {\n        id: USER.id,\n        name: \"\".concat(USER.profile.firstName, \" \").concat(USER.profile.lastName)\n      };\n      this.state.setMessages([].concat(_toConsumableArray(this.state.messages), [{\n        ts: ts,\n        from: from,\n        text: text\n      }]));\n    }\n  }]);\n\n  function ChatRoom(props) {\n    var _this;\n\n    _classCallCheck(this, ChatRoom);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatRoom).call(this, props));\n    _this.state = {\n      isLoading: false,\n      messages: []\n    };\n    return _this;\n  }\n\n  _createClass(ChatRoom, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.configureCollections();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const [isLoading, setIsLoading] = useState(true);\n      // const [messages, setMessages] = useState([]);\n      // const [messageText, setMessageText] = useState(\"\");\n      // useEffect(() => {\n      //   // Set up the collection watch stream\n      //   // TODO: Need to know the document structure\n      //   this.state.setMessages(MESSAGES);\n      //   this.state.setIsLoading(false);\n      // }, []);\n      return jsx(ChatLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, jsx(ChatFeed, {\n        messages: this.state.messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), jsx(ChatBar, {\n        sendMessage: this.state.sendMessage,\n        setMessageText: this.state.setMessageText,\n        messageText: this.state.messageText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatRoom;\n}(React.Component);\n\nexport { ChatRoom as default };\nvar ChatLayout = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/jasonflax/Development/ChatApp/src/components/ChatRoom.js"],"names":["React","useRef","useState","useEffect","css","jsx","styled","ChatFeed","ChatBar","usersObserver","channelSubscriptionObserver","channelMessageObserver","channelSubscriptionsCollection","client","ObjectId","USER","id","profile","firstName","lastName","MESSAGES","ts","from","name","text","ChatRoom","subscribe","event","console","log","state","messages","push","fullDocument","setState","callFunction","auth","user","toHexString","subscriptionId","sync","Date","now","setMessages","props","isLoading","configureCollections","sendMessage","setMessageText","messageText","Component","ChatLayout","div"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\n\nimport ChatFeed from \"./ChatFeed\";\nimport ChatBar from \"./ChatBar\";\nimport { usersObserver, channelSubscriptionObserver, channelMessageObserver } from \"../models\";\nimport { channelSubscriptionsCollection, client } from \"..\";\nimport { ObjectId } from \"bson\";\n\nconst USER = {\n  id: \"20391029481029849124\",\n  profile: {\n    firstName: \"Jessica\",\n    lastName: \"Real\",\n  },\n};\n\nconst MESSAGES = [\n  {\n    ts: 1557355231922,\n    from: { id: \"40391024481629829197\", name: \"Jack Example\" },\n    text: \"Wanna meet up with Tim at 8 for dinner?\",\n  },\n  {\n    ts: 1557355239361,\n    from: { id: \"20391029481029849124\", name: \"Jessica Real\" },\n    text: \"Yeah that works for me!\",\n  },\n  {\n    ts: 1557355245967,\n    from: { id: \"20391029481029849124\", name: \"Jessica Real\" },\n    text:\n      \"What restaurant should we go to? There's a place in the LES that I've wanted to try for a while.\",\n  },\n  {\n    ts: 1557355249520,\n    from: { id: \"40391024481629829197\", name: \"Jack Example\" },\n    text: \"What kind of food?\",\n  },\n  {\n    ts: 1557355255359,\n    from: { id: \"20391029481029849124\", name: \"Jessica Real\" },\n    text: \"Mediterranean! Merguez 😍😍😍\",\n  },\n  {\n    ts: 1557355259651,\n    from: { id: \"40391024481629829197\", name: \"Jack Example\" },\n    text: \"Sounds great lets do it!\",\n  },\n];\n\n/* This component manages the state of the entire chat room.\n * NOTE: Requires a logged in Stitch user\n */\nexport default class ChatRoom extends React.Component {\n  async configureCollections() {\n    channelMessageObserver.subscribe(event => {\n      console.log(event);\n      this.state.messages.push(event.fullDocument);\n      this.setState(this.state);\n    });\n    const subscriptionId = await client.callFunction(\"subscribeToChannel\", [\n      client.auth.user.id, \n      new ObjectId().toHexString, \n      \"default\"\n    ]);\n\n    console.log(\"Sub id: \" + subscriptionId);\n\n    channelSubscriptionObserver.sync(subscriptionId);\n  }\n\n  sendMessage(text) {\n    const ts = Date.now();\n    const from = {\n      id: USER.id,\n      name: `${USER.profile.firstName} ${USER.profile.lastName}`,\n    };\n    this.state.setMessages([...this.state.messages, { ts, from, text }]);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      messages: []\n    }\n  }\n\n  componentDidMount() {\n    this.configureCollections();\n  }\n\n  render() {\n    // const [isLoading, setIsLoading] = useState(true);\n    // const [messages, setMessages] = useState([]);\n    // const [messageText, setMessageText] = useState(\"\");\n\n    // useEffect(() => {\n    //   // Set up the collection watch stream\n    //   // TODO: Need to know the document structure\n    //   this.state.setMessages(MESSAGES);\n    //   this.state.setIsLoading(false);\n    // }, []);\n    \n    return <ChatLayout>\n      <ChatFeed messages={this.state.messages} />\n      <ChatBar\n        sendMessage={this.state.sendMessage}\n        setMessageText={this.state.setMessageText}\n        messageText={this.state.messageText}\n      />\n    </ChatLayout>;\n  }\n}\nconst ChatLayout = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n  max-height: 100vh;\n  background-color: white;\n`;\n"]},"metadata":{},"sourceType":"module"}