{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jasonflax/Development/ChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jasonflax/Development/ChatApp/src/components/ChatFeed.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 10px 14px;\\n  box-sizing: border-box;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  flex-grow: 1;\\n  box-sizing: border-box;\\n  overflow-y: scroll;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport ChatMessage from \"./ChatMessage.js\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { stitchServiceErrorCodeFromApi } from \"mongodb-stitch-core-sdk/dist/esm/StitchServiceErrorCode\";\nimport { client } from \"../index.js\";\nvar USER = {\n  id: \"20391029481029849124\",\n  profile: {\n    firstName: \"Jessica\",\n    lastName: \"Real\"\n  }\n};\n\nvar ChatFeed = function ChatFeed(props) {\n  var messages = props.messages;\n  useEffect(function () {\n    scroll.scrollToBottom({\n      containerId: \"feed\",\n      duration: 320,\n      delay: 40\n    });\n  }, [messages]);\n\n  var isFromCurrentUser = function isFromCurrentUser(message) {\n    return !!message && message.ownerId === client.auth.user.id;\n  };\n\n  var isFromSameUser = function isFromSameUser(m1, m2) {\n    return m1.ownerId == m2.ownerId;\n  };\n\n  return jsx(ChatFeedLayout, {\n    id: \"feed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, jsx(Feed, {\n    messages: messages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, messages.map(function (m, i) {\n    var isFirst = i === 0;\n    var isLast = i === messages.length - 1;\n    var nextIsFromCurrentUser = isFromCurrentUser(messages[i + 1]) || false;\n    var shouldShowHeader = isLast || isFromSameUser(messages[i + 1], m);\n    var isLastFromUser = isLast || isFromCurrentUser(m) ? !nextIsFromCurrentUser : nextIsFromCurrentUser;\n    return jsx(ChatMessage, {\n      key: m._id,\n      message: m,\n      isFromCurrentUser: isFromCurrentUser(m),\n      shouldShowHeader: shouldShowHeader,\n      isFirstFromUser: shouldShowHeader,\n      isLastFromUser: isLastFromUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default ChatFeed;\nvar ChatFeedLayout = styled.div(_templateObject());\nvar Feed = styled.div(_templateObject2());","map":{"version":3,"sources":["/Users/jasonflax/Development/ChatApp/src/components/ChatFeed.js"],"names":["React","useRef","useState","useEffect","css","jsx","styled","ChatMessage","animateScroll","scroll","stitchServiceErrorCodeFromApi","client","USER","id","profile","firstName","lastName","ChatFeed","props","messages","scrollToBottom","containerId","duration","delay","isFromCurrentUser","message","ownerId","auth","user","isFromSameUser","m1","m2","map","m","i","isFirst","isLast","length","nextIsFromCurrentUser","shouldShowHeader","isLastFromUser","_id","ChatFeedLayout","div","Feed"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,cAAxC;AACA,SAASC,6BAAT,QAA8C,yDAA9C;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,IAAMC,IAAI,GAAG;AACXC,EAAAA,EAAE,EAAE,sBADO;AAEXC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,SADJ;AAEPC,IAAAA,QAAQ,EAAE;AAFH;AAFE,CAAb;;AAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,MAChBC,QADgB,GACHD,KADG,CAChBC,QADgB;AAExBhB,EAAAA,SAAS,CACP,YAAM;AACJM,IAAAA,MAAM,CAACW,cAAP,CAAsB;AACpBC,MAAAA,WAAW,EAAE,MADO;AAEpBC,MAAAA,QAAQ,EAAE,GAFU;AAGpBC,MAAAA,KAAK,EAAE;AAHa,KAAtB;AAKD,GAPM,EAQP,CAACJ,QAAD,CARO,CAAT;;AAUA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,OAAO,EAAI;AACnC,WAAO,CAAC,CAACA,OAAF,IAAaA,OAAO,CAACC,OAAR,KAAoBf,MAAM,CAACgB,IAAP,CAAYC,IAAZ,CAAiBf,EAAzD;AACD,GAFD;;AAGA,MAAMgB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAKC,EAAL,EAAW;AAChC,WAAOD,EAAE,CAACJ,OAAH,IAAcK,EAAE,CAACL,OAAxB;AACD,GAFD;;AAGA,SACE,IAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,IAAD;AAAM,IAAA,QAAQ,EAAEP,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QAAQ,CAACa,GAAT,CAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtB,QAAMC,OAAO,GAAGD,CAAC,KAAK,CAAtB;AACA,QAAME,MAAM,GAAGF,CAAC,KAAKf,QAAQ,CAACkB,MAAT,GAAkB,CAAvC;AACA,QAAMC,qBAAqB,GACzBd,iBAAiB,CAACL,QAAQ,CAACe,CAAC,GAAG,CAAL,CAAT,CAAjB,IAAsC,KADxC;AAEA,QAAMK,gBAAgB,GAAGH,MAAM,IAAIP,cAAc,CAACV,QAAQ,CAACe,CAAC,GAAG,CAAL,CAAT,EAAkBD,CAAlB,CAAjD;AACA,QAAMO,cAAc,GAClBJ,MAAM,IAAIZ,iBAAiB,CAACS,CAAD,CAA3B,GACI,CAACK,qBADL,GAEIA,qBAHN;AAIA,WACE,IAAC,WAAD;AACE,MAAA,GAAG,EAAEL,CAAC,CAACQ,GADT;AAEE,MAAA,OAAO,EAAER,CAFX;AAGE,MAAA,iBAAiB,EAAET,iBAAiB,CAACS,CAAD,CAHtC;AAIE,MAAA,gBAAgB,EAAEM,gBAJpB;AAKE,MAAA,eAAe,EAAEA,gBALnB;AAME,MAAA,cAAc,EAAEC,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD,GApBA,CADH,CADF,CADF;AA2BD,CA7CD;;AA8CA,eAAevB,QAAf;AAEA,IAAMyB,cAAc,GAAGpC,MAAM,CAACqC,GAAV,mBAApB;AAMA,IAAMC,IAAI,GAAGtC,MAAM,CAACqC,GAAV,oBAAV","sourcesContent":["/** @jsx jsx */\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { css, jsx } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport ChatMessage from \"./ChatMessage.js\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport { stitchServiceErrorCodeFromApi } from \"mongodb-stitch-core-sdk/dist/esm/StitchServiceErrorCode\";\nimport { client } from \"../index.js\";\n\nconst USER = {\n  id: \"20391029481029849124\",\n  profile: {\n    firstName: \"Jessica\",\n    lastName: \"Real\",\n  },\n};\n\nconst ChatFeed = props => {\n  const { messages } = props;\n  useEffect(\n    () => {\n      scroll.scrollToBottom({\n        containerId: \"feed\",\n        duration: 320,\n        delay: 40,\n      });\n    },\n    [messages],\n  );\n  const isFromCurrentUser = message => {\n    return !!message && message.ownerId === client.auth.user.id;\n  };\n  const isFromSameUser = (m1, m2)=> {\n    return m1.ownerId == m2.ownerId;\n  }\n  return (\n    <ChatFeedLayout id=\"feed\">\n      <Feed messages={messages}>\n        {messages.map((m, i) => {\n          const isFirst = i === 0;\n          const isLast = i === messages.length - 1;\n          const nextIsFromCurrentUser =\n            isFromCurrentUser(messages[i + 1]) || false;\n          const shouldShowHeader = isLast || isFromSameUser(messages[i + 1], m);\n          const isLastFromUser =\n            isLast || isFromCurrentUser(m)\n              ? !nextIsFromCurrentUser\n              : nextIsFromCurrentUser;\n          return (\n            <ChatMessage\n              key={m._id}\n              message={m}\n              isFromCurrentUser={isFromCurrentUser(m)}\n              shouldShowHeader={shouldShowHeader}\n              isFirstFromUser={shouldShowHeader}\n              isLastFromUser={isLastFromUser}\n            />\n          );\n        })}\n      </Feed>\n    </ChatFeedLayout>\n  );\n};\nexport default ChatFeed;\n\nconst ChatFeedLayout = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  box-sizing: border-box;\n  overflow-y: scroll;\n`;\nconst Feed = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 14px;\n  box-sizing: border-box;\n`;\n"]},"metadata":{},"sourceType":"module"}